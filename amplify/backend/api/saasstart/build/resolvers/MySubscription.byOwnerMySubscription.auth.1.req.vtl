## [Start] Authorization Steps. **
$util.qr($ctx.stash.put("hasAuth", true))
#set( $isAuthorized = false )
#set( $primaryFieldMap = {} )
#if( $util.authType() == "API Key Authorization" )

#end
#if( $util.authType() == "IAM Authorization" )
  #set( $adminRoles = ["eu-west-1_Vruai2PnH_Full-access/CognitoIdentityCredentials","eu-west-1_Vruai2PnH_Manage-only/CognitoIdentityCredentials","saasPostConfirmation-staging","saasUpdateSubscription-staging"] )
  #foreach( $adminRole in $adminRoles )
    #if( $ctx.identity.userArn.contains($adminRole) && $ctx.identity.userArn != $ctx.stash.authRole && $ctx.identity.userArn != $ctx.stash.unauthRole )
      #return($util.toJson({}))
    #end
  #end
$util.unauthorized()
#end
#if( $util.authType() == "User Pool Authorization" )
  #set( $ownerClaim = $util.defaultIfNull($ctx.identity.claims.get("sub"), "___xamznone____") )
  #set( $currentClaim1 = $util.defaultIfNull($ctx.identity.claims.get("username"), $util.defaultIfNull($ctx.identity.claims.get("cognito:username"), "___xamznone____")) )
  #set( $ownerClaim = "$ownerClaim::$currentClaim1" )
  #set( $ownerClaimsList0 = [] )
  $util.qr($ownerClaimsList0.add($util.defaultIfNull($ctx.identity.claims.get("sub"), "___xamznone____")))
  $util.qr($ownerClaimsList0.add($util.defaultIfNull($ctx.identity.claims.get("username"), $util.defaultIfNull($ctx.identity.claims.get("cognito:username"), "___xamznone____"))))
  $util.qr($ownerClaimsList0.add($ownerClaim))
  #if( !$util.isNull($ctx.args.owner) )
    #if( $util.isString($ctx.args.owner) )
      #set( $ownerCondition = (($ownerClaim == $ctx.args.owner) || $ownerClaimsList0.contains($ctx.args.owner)) )
    #else
      #set( $ownerCondition = ($ownerClaim == $util.defaultIfNull($ctx.args.owner.get("eq"), "___xamznone____") || $ownerClaimsList0.contains($util.defaultIfNull($ctx.args.owner.get("eq"), "___xamznone____"))) )
      #if( !$ownerCondition )
        #set( $entityValues = 0 )
        #foreach( $argEntity in $ctx.args.owner.get("eq") )
          #if( $ownerClaimsList0.contains($argEntity) )
            #set( $entityValues = $entityValues + 1 )
          #end
        #end
        #if( $entityValues == $ctx.args.owner.get("eq").size() )
          #set( $ownerCondition = true )
        #end
      #end
    #end
    #if( $ownerCondition )
      #set( $isAuthorized = true )
      $util.qr($ctx.stash.put("authFilter", null))
    #end
  #else
    $util.qr($primaryFieldMap.put("owner", $ownerClaimsList0))
  #end
  #if( !$isAuthorized && $util.isNull($ctx.stash.authFilter) && !$primaryFieldMap.isEmpty() )
    #foreach( $entry in $primaryFieldMap.entrySet() )
      $util.qr($ctx.args.put($entry.key, $entry.value))
      #set( $isAuthorized = true )
    #end
  #end
#end
#if( !$isAuthorized && $util.isNull($ctx.stash.authFilter) )
$util.unauthorized()
#end
$util.toJson({"version":"2018-05-29","payload":{}})
## [End] Authorization Steps. **